version: '3.8'

# Docker Compose for Production
# Use with: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

services:
  # Production overrides for auth service
  auth-service:
    environment:
      # Production environment settings
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      # Production logging (less verbose)
      - Logging__LogLevel__Default=Warning
      - Logging__LogLevel__Microsoft=Warning
      - Logging__LogLevel__Microsoft.AspNetCore=Warning
      # Security: Use environment variables for sensitive data
      - Jwt__SecretKey=${JWT_SECRET_KEY}
      - Email__SendGrid__ApiKey=${SENDGRID_API_KEY}
      - Email__Smtp__Username=${SMTP_USERNAME}
      - Email__Smtp__Password=${SMTP_PASSWORD}
      - Frontend__BaseUrl=${FRONTEND_URL}
    # Production resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    # Production restart policy
    restart: unless-stopped

  # Production postgres with backup
  postgres:
    environment:
      - POSTGRES_DB=${DATABASE_NAME:-vetterati_ats}
      - POSTGRES_USER=${DATABASE_USER:-ats_user}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    restart: unless-stopped

  # Production Redis with persistence
  redis:
    command: redis-server --appendonly yes --appendfsync everysec
    volumes:
      - redis_data:/data
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
    restart: unless-stopped

  # Production frontend
  frontend:
    environment:
      - REACT_APP_API_URL=${API_GATEWAY_URL}
      - NODE_ENV=production
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
    restart: unless-stopped

  # Production API Gateway
  api-gateway:
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    restart: unless-stopped

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - api-gateway
      - frontend
    networks:
      - ats-network
    restart: unless-stopped

volumes:
  redis_data:

# Production-specific secrets (use Docker secrets in production)
secrets:
  jwt_secret:
    external: true
  db_password:
    external: true
  sendgrid_api_key:
    external: true
