version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: vetterati_ats
      POSTGRES_USER: ats_user
      POSTGRES_PASSWORD: ats_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../scripts/db-init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ats_user -d vetterati_ats"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - ats-local

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - ats-local

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"  # Reduced memory for local dev
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - ats-local

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: ats_user
      RABBITMQ_DEFAULT_PASS: ats_password
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - ats-local

  # LocalStack - Local AWS Cloud Stack
  localstack:
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
    environment:
      - DEBUG=1
      - SERVICES=s3,dynamodb,sqs,sns
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - ats-local

  # LocalStack Resource Initializer
  localstack-init:
    image: amazon/aws-cli:latest
    depends_on:
      localstack:
        condition: service_healthy
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ENDPOINT_URL=http://localstack:4566
    volumes:
      - "../scripts/localstack:/scripts"
    networks:
      - ats-local
    command: >
      sh -c "
        echo 'Waiting for LocalStack to be ready...' &&
        sleep 5 &&
        echo 'Creating S3 bucket...' &&
        aws --endpoint-url=http://localstack:4566 s3 mb s3://vetterati-resumes &&
        echo 'Creating DynamoDB tables...' &&
        aws --endpoint-url=http://localstack:4566 dynamodb create-table --table-name analytics-events --attribute-definitions AttributeName=id,AttributeType=S AttributeName=timestamp,AttributeType=N --key-schema AttributeName=id,KeyType=HASH AttributeName=timestamp,KeyType=RANGE --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5 &&
        aws --endpoint-url=http://localstack:4566 dynamodb create-table --table-name user-analytics --attribute-definitions AttributeName=userId,AttributeType=S AttributeName=date,AttributeType=S --key-schema AttributeName=userId,KeyType=HASH AttributeName=date,KeyType=RANGE --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5 &&
        echo 'Creating SNS topic...' &&
        aws --endpoint-url=http://localstack:4566 sns create-topic --name vetterati-notifications &&
        echo 'Creating SQS queue...' &&
        aws --endpoint-url=http://localstack:4566 sqs create-queue --queue-name vetterati-notifications &&
        echo 'AWS resources initialized successfully!'
      "

volumes:
  postgres_data:
  elasticsearch_data:

networks:
  ats-local:
    driver: bridge
