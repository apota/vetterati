version: '3.8'

services:
  # Authentication Service (C#)
  auth-service:
    build:
      context: ..
      dockerfile: ./src/services/auth-service/Dockerfile
    ports:
      - "5001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=vetterati_ats;Username=ats_user;Password=ats_password
      - ConnectionStrings__Redis=redis:6379
      - Jwt__SecretKey=your-super-secret-jwt-key-for-docker-that-is-at-least-32-characters-long-and-secure
      - Jwt__Issuer=vetterati-ats
      - Jwt__Audience=vetterati-ats
      - Jwt__ExpiryMinutes=60
      - Jwt__RefreshTokenExpiryDays=30
      - Frontend__BaseUrl=http://localhost:3000
    depends_on:
      - postgres
      - redis
    volumes:
      - ../src/services/auth-service:/app/src
    networks:
      - ats-local

  # Resume Management Service (Python)
  resume-service:
    build:
      context: ../src/services/resume-service
      dockerfile: Dockerfile.dev
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql://ats_user:ats_password@postgres:5432/vetterati_ats
      - REDIS_URL=redis://redis:6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - S3_BUCKET_NAME=vetterati-resumes
    depends_on:
      - postgres
      - redis
      - elasticsearch
      - localstack
    volumes:
      - ../src/services/resume-service:/app
      - ../temp/uploads:/app/uploads
    networks:
      - ats-local

  # AHP Engine Service (C#)
  ahp-service:
    build:
      context: ..
      dockerfile: ./src/services/ahp-service/Dockerfile
    ports:
      - "5002:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=vetterati_ats;Username=ats_user;Password=ats_password
      - Redis__ConnectionString=redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - ../src/services/ahp-service:/app/src
    networks:
      - ats-local

  # Workflow Service (Python)
  workflow-service:
    build:
      context: ../src/services/workflow-service
      dockerfile: Dockerfile.dev
    ports:
      - "8002:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://ats_user:ats_password@postgres:5432/vetterati_ats
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://ats_user:ats_password@rabbitmq:5672
    depends_on:
      - postgres
      - redis
      - rabbitmq
    volumes:
      - ../src/services/workflow-service:/app
    networks:
      - ats-local

  # Analytics Service (Python)
  analytics-service:
    build:
      context: ../src/services/analytics-service
      dockerfile: Dockerfile.dev
    ports:
      - "8003:8000"
    environment:
      - DATABASE_URL=postgresql://ats_user:ats_password@postgres:5432/vetterati_ats
      - DYNAMODB_ENDPOINT=http://localstack:4566
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - postgres
      - localstack
      - elasticsearch
    volumes:
      - ../src/services/analytics-service:/app
    networks:
      - ats-local

  # Job Service (Python)
  job-service:
    build:
      context: ../src/services/job-service
      dockerfile: Dockerfile.dev
    ports:
      - "8004:8000"
    environment:
      - DATABASE_URL=postgresql://ats_user:ats_password@postgres:5432/vetterati_ats
      - REDIS_URL=redis://redis:6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - postgres
      - redis
      - elasticsearch
    volumes:
      - ../src/services/job-service:/app
    networks:
      - ats-local

  # Candidate Service (Python)
  candidate-service:
    build:
      context: ../src/services/candidate-service
      dockerfile: Dockerfile.dev
    ports:
      - "8005:8000"
    environment:
      - DATABASE_URL=postgresql://ats_user:ats_password@postgres:5432/vetterati_ats
      - REDIS_URL=redis://redis:6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - postgres
      - redis
      - elasticsearch
    volumes:
      - ../src/services/candidate-service:/app
    networks:
      - ats-local

  # Notification Service (Python)
  notification-service:
    build:
      context: ../src/services/notification-service
      dockerfile: Dockerfile.dev
    ports:
      - "8006:8000"
    environment:
      - DATABASE_URL=postgresql://ats_user:ats_password@postgres:5432/vetterati_ats
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://ats_user:ats_password@rabbitmq:5672
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - SNS_TOPIC_ARN=arn:aws:sns:us-east-1:000000000000:vetterati-notifications
      - SQS_QUEUE_URL=http://localstack:4566/000000000000/vetterati-notifications
    depends_on:
      - postgres
      - redis
      - rabbitmq
      - localstack
    volumes:
      - ../src/services/notification-service:/app
    networks:
      - ats-local

  # API Gateway (C#)
  api-gateway:
    build:
      context: ..
      dockerfile: ./src/services/api-gateway/Dockerfile
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - Services__AuthService=http://auth-service:8080
      - Services__ResumeService=http://resume-service:8000
      - Services__AhpService=http://ahp-service:80
      - Services__WorkflowService=http://workflow-service:8000
      - Services__AnalyticsService=http://analytics-service:8000
      - Services__JobService=http://job-service:8000
      - Services__CandidateService=http://candidate-service:8000
      - Services__NotificationService=http://notification-service:8000
    depends_on:
      - auth-service
    volumes:
      - ../src/services/api-gateway:/app/src
    networks:
      - ats-local

networks:
  ats-local:
    external: true
